{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww14060\viewh11820\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 #C++\
line = """#include <iostream>\
\
 int main()\
 \{\
 	std::cout << "Hello, World.";\
 \}"""\
 \
print parseStressOfLine(line)\
\
#Java\
line = """public class Hello \{\
  	public static void main(String []args) \{\
 		System.out.println("Hello World");\
  	\}\
 \}"""\
print parseStressOfLine(line)\
\
#JavaScript popup\
line = """alert("Hello, World");"""\
print parseStressOfLine(line)\
\
#LISP\
line = """(DEFUN HELLO-WORLD ()\
	(PRINT (LIST 'HELLO 'WORLD)))"""\
print parseStressOfLine(line)\
\
#Python\
line = """print "hello world" """\
print parseStressOfLine(line)\
\
#Ruby\
line = """puts "Hello, world" """\
print parseStressOfLine(line)\
\
#include <iostream>\
\
 int main()\
 \{\
 	std::cout << "Hello, World.";\
 \}\
\{'stress': u'***#*01***<**iostream****>**int*1***(****)****\{**std****:**cout**:****<****<**``*01***,*1***.**``****;****\}*', 'stress_no_punct': u'011011'\}\
public class Hello \{\
  	public static void main(String []args) \{\
 		System.out.println("Hello World");\
  	\}\
 \}\
\{'stress': u"10101***\{*101011***(*1***[****]**args****)****\{**systemoutprintln**..****(**``*011*''****)****;****\}****\}*", 'stress_no_punct': u'101011010111011'\}\
alert("Hello, World");\
\{'stress': u"01***(**``*01***,*1*''****)****;*", 'stress_no_punct': u'01011'\}\
(DEFUN HELLO-WORLD ()\
	(PRINT (LIST 'HELLO 'WORLD)))\
\{'stress': u"***(**defun**helloworld**-****(****)****(*1***(*1*'hello**'world****)****)****)*", 'stress_no_punct': u'11'\}\
print "hello world" \
\{'stress': u"1*``*011*''*", 'stress_no_punct': u'1011'\}\
puts "Hello, world" \
\{'stress': u"1*``*01***,*1*''*", 'stress_no_punct': u'1011'\}\
\
\
\
\
____________\
\
\
\
\
\
#include < i o stream>\
\
 int main()\
 \{\
 	std:: c out << "Hello, World.";\
 \}\
\{'stress': u'***#*01***<*111***>**int*1***(****)****\{**std****:****:*11***<****<**``*01***,*1***.**``****;****\}*', 'stress_no_punct': u'01111111011'\}\
public class Hello \{\
  	public static void main(String []args) \{\
 		System . out . println("Hello World");\
  	\}\
 \}\
\{'stress': u"10101***\{*101011***(*1***[****]**args****)****\{*10***.*1***.**println****(**``*011*''****)****;****\}****\}*", 'stress_no_punct': u'101011010111101011'\}\
alert("Hello, World");\
\{'stress': u"01***(**``*01***,*1*''****)****;*", 'stress_no_punct': u'01011'\}\
(DE FUN HELLO - WORLD ()\
	(PRINT (LIST ' HELLO ' WORLD)))\
\{'stress': u"***(*0101***-*1***(****)****(*1***(*1*'*01*'*1***)****)****)*", 'stress_no_punct': u'0101111011'\}\
print "hello world" \
\{'stress': u"1*``*011*''*", 'stress_no_punct': u'1011'\}\
puts "Hello, world" \
\{'stress': u"1*``*01***,*1*''*", 'stress_no_punct': u'1011'\}\
\
\
\
\
\
________________\
\
\
\
\
#include < i o stream>\
\
 ent main()\
 \{\
 	stood:: c out << "Hello, World.";\
 \}\
\{'stress': u'***#*01***<*111***>*11***(****)****\{*1***:****:*11***<****<**``*01***,*1***.**``****;****\}*', 'stress_no_punct': u'0111111111011'\}\
\
01111\
11\
111011\
\
11/2\
\
#01 <111>\
\
1 1()\
\{\
	1::11<<\'9301, 1.\'94;\
\}\
\
public class Hello \{\
  	public static void main(String []args) \{\
 		System . out . print line ("Hello World");\
  	\}\
 \}\
\{'stress': u"10101***\{*101011***(*1***[****]**args****)****\{*10***.*1***.*11***(**``*011*''****)****;****\}****\}*", 'stress_no_punct': u'10101101011110111011'\}\
\
10101\
10101111\
10111011\
\
15/6\
\
10 1 01 \{\
	10 10 1 1(1 []1) \{\
		10.1.11(\'9301 1\'94);\
	\}\
\}\
\
\
alert("Hello, World");\
\{'stress': u"01***(**``*01***,*1*''****)****;*", 'stress_no_punct': u'01011'\}\
\
01011\
\
3/1\
\
01(\'9301, 1\'94);\
\
(DE FUN HELLO - WORLD ()\
	(PRINT (LIST ' HELLO ' WORLD)))\
\{'stress': u"***(*0101***-*1***(****)****(*1***(*1*'*01*'*1***)****)****)*", 'stress_no_punct': u'0101111011'\}\
\
01011\
11011\
\
7/3\
\
(01 01-1()\
	(1(1 \'9201 \'911)))\
\
print "hello world" \
\{'stress': u"1*``*011*''*", 'stress_no_punct': u'1011'\}\
\
1011\
\
3/1\
\
1 \'9301 1\'94\
\
puts "Hello, world" \
\{'stress': u"1*``*01***,*1*''*", 'stress_no_punct': u'1011'\}\
\
1011\
\
3/1\
\
1 \'9301, 1\'94\
\
\
\
______________\
\
\
\
\
\
\
\
May I for my own self song's truth reckon,\
Journey's jargon, how I in harsh days\
Hardship endured oft.\
Bitter breast cares have I abided,\
Known on my keel many a care's hold,\
And dire sea surge, and there I oft spent\
Narrow night watch nigh the ship's head\
While she tossed close to cliffs. Coldly afflicted,\
My feet were by frost be numbed.\
Chill its chains are; chafing sighs\
Hew my heart round and hunger begot\
Mere weary mood. Lest man know not\
That he on dry land love liest live eth,\
List how I, care wretched, on ice cold sea,\
Weathered the winter, wretched outcast\
Deprived of my kin men;\
\
\{'stress': u'11011111110***,*10110***,*1101110011***.*101111010***,*1111100111***,*0111***,*01111101110111111101***.*10010***,*1101101***.*1010***;*1011111010011101***.*1111011111*liest*1*eth****,*111***,*110***,*1111***,*10010***,*1012010111***;*', 'stress_no_punct': u'11011111110101101101110011101111010111110011101110111110111011111110110010110110110101011111010011101111101111111111101111100101012010111'\}\
\
11011111110***,*\
10110***,*11011\
10011***.*\
101111010***,*\
1111100111***,*\
0111***,*01111\
10111011\
1111101***.*10010***,*\
1101101***.*\
1010***;*101\
111101001\
1101***.*1111\
011111*01t*1*1****,*\
111***,*110***,*1111***,*\
10010***,*1012\
010111***;*\
\
\
___________________\
\
\
void setup() \{\
    print line ("hello, world");\
\}\
\
void draw() \{\
\}\
\{'stress': u"112***(****)****\{*11***(**``*01***,*1*''****)****;****\}*11***(****)****\{****\}*", 'stress_no_punct': u'1121101111'\}\
\
\
111\
11011\
11\
\
\
____________________\
\
\
PRIMARY FEET\
Iambic - 01\
Anapestic - 001\
Trochaic - 10\
Dactylic - 100\
\
\
SUBSTITUTIVE FEET\
Spondaic - 11\
Pyrrhic - 00\
\
Monometer - 1 foot\
Dimeter - 2 feet\
Trimeter - 3 feet\
Tetrameter - 4 feet\
Pentameter - 5 feet\
Hexameter - 6 feet\
Heptameter - 7 feet\
Octameter - 8 feet\
\
\'93accentual meter\'94 - only the number of accented beats matters\
\
\
\
\
_______________\
\
\
\
void setup() \{\
    size(five hundred, five hundred);\
    print line ("hello, world");\
\}\
\
void draw() \{\
\}\
\{'stress': u"112***(****)****\{*1***(*110***,*110***)****;*11***(**``*01***,*1*''****)****;****\}*11***(****)****\{****\}*", 'stress_no_punct': u'11211101101101111'\}\
\
\
111\
1110110\
11011\
11\
\
\
\
_____________________\
\
\
float x, y, speed;\
\
void setup() \{\
  size( four thirty, four thirty );\
  background( thirty );\
\}\
\
void draw() \{\
  render Pattern();\
\}\
\
void render Pattern() \{\
  speed plus equals point o o four;\
\
  push Matrix();\
    translate( width divided by two, height divided by two );\
    \
    for (ent i equals zero; i less than one hundred; i plus equals five) \{\
      x equals sine ( ( speed plus i ) times two hundred ) times two hundred;\
      y equals co sine ( speed plus i ) times two hundred;\
      \
      no Stroke();\
      fill( one hundred ninety six, two hundred five, two hundred two, one hundred );\
      ellipse( x, y, two, two );\
    \}\
  pop Matrix();\
\}\
\
\
1 1, 1, 1;\
\
1 11() \{\
	1( 110, 110 );\
	11( 10 );\
\}\
\
11() \{\
	1010();\
\}\
\
1 1010() \{\
	1 110 1111;\
\
	110();\
		01( 1 010 1 1, 1 010 1 1 );\
\
		0 ( 1 1 10 10; 1 1 0 110; 1 110 1) \{\
			1 10 1( ( 1 1 1 ) 1 110) 1 110;\
			1 10 11( 1 1 1 ) 1 110;\
\
			11();\
			1(110101, 1101 , 1101, 110);\
			01( 1, 1, 1, 1 );\
		\}\
	110();\
\}\
\
\
\
1111\
\
111\
1110110\
1110\
\
11\
1010\
\
11010\
11101111\
\
110\
01101011101011\
\
011101011011011101\
\
\
_____________________\
\
\
\
float x, y, speed;\
\
void setup() \{\
  size( four thirty, four thirty );\
  background( thirty );\
\}\
\
void draw() \{\
  render Pattern();\
\}\
\
void render Pattern() \{\
  speed plus equals point o o four;\
\
  push Matrix();\
    translate( width divided by two, height divided by two );\
    \
    for (ent i equals zero; i less than one hundred; i plus equals five) \{\
      x equals sine ( ( speed plus i ) times two hundred ) times two hundred;\
      y equals co sine ( speed plus i ) times two hundred;\
      \
      no Stroke();\
      fill( two thirty, two thirty, two thirty, one thirty );\
      ellipse( x, y, two, two );\
    \}\
  pop Matrix();\
\}\
\
\
1 1, 1, 1;\
\
1 11() \{\
	1( 110, 110 );\
	11( 10 );\
\}\
\
11() \{\
	1010();\
\}\
\
1 1010() \{\
	1 110 1111;\
\
	110();\
		01( 1 010 1 1, 1 010 1 1 );\
\
		0 ( 1 1 10 10; 1 1 0 110; 1 110 1) \{\
			1 10 1( ( 1 1 1 ) 1 110) 1 110;\
			1 10 11( 1 1 1 ) 1 110;\
\
			11();\
			1(110, 110, 110, 110);\
			01( 1, 1, 1, 1 );\
		\}\
	110();\
\}\
\
\
float x, y, speed;\
\
void setup() \{\
  size( four thirty, four thirty );\
  background( thirty );\
\}\
\
void draw() \{\
  renderPattern();\
\}\
\
void renderPattern() \{\
  speed plus equals point o o four;\
\
  pushMatrix();\
    translate( width divided by two, height divided by two );\
    \
    for (int i equals zero; i less than one hundred; i plus equals five) \{\
      x equals sine ( ( speed plus i ) times two hundred ) times two hundred;\
      y equals co sine ( speed plus i ) times two hundred;\
      \
      noStroke();\
      fill( two thirty, two thirty, two thirty, one thirty );\
      ellipse( x, y, two, two );\
    \}\
  popMatrix();\
\}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}